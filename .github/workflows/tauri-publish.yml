name: 'Publish Release (Tauri + Server + Static)'
on:
  push:
    branches:
      - release
env:
  VITE_SERVER_URLS: Local files:localhost:16800:0,Default server:pi.thissma.fr:16900:1


jobs:
  build-all:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            target: "aarch64-apple-darwin"
            name: "macos-aarch64"
          - platform: "macos-latest" # for Intel based macs.
            target: "x86_64-apple-darwin"
            name: "macos-x64"
          - platform: "ubuntu-latest" # for Tauri v1 you could replace this with ubuntu-20.04.
            target: "x86_64-unknown-linux-gnu"
            name: "linux-x64"
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            name: "windows-x64"
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          
      - name: get version
        if: runner.os != 'Windows'
        run: echo "PACKAGE_VERSION=$(node -p "require('./client/package.json').version")" >> $GITHUB_ENV
        
      - name: get version (windows)
        if: runner.os == 'Windows'
        run: echo "PACKAGE_VERSION=$(node -p "require('./client/package.json').version")" >> $env:GITHUB_ENV
        
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: cd client && npm install # change this to npm or pnpm depending on which one you use

      - name: build tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v${{ env.PACKAGE_VERSION }}
          releaseName: TWWE v${{ env.PACKAGE_VERSION }}
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}
          projectPath: desktop

      - name: build server
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --manifest-path server/Cargo.toml --verbose --release --target ${{ matrix.target }}

      - name: build static site
        run: cd client && npm run build

      - name: build archive
        shell: bash
        env:
          dirname: twwe-server_${{ env.PACKAGE_VERSION }}_${{ matrix.name }}
        run: |
          mkdir "$dirname"
          if [ "${{ matrix.platform }}" = "windows-latest" ]; then
            mv "server/target/${{ matrix.target }}/release/twwe-server.exe" "$dirname"
          else
            mv "server/target/${{ matrix.target }}/release/twwe-server" "$dirname"
          fi
          mv "client/dist" "$dirname/static"

          if [ "${{ matrix.platform }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: upload server to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload app-v${{ env.PACKAGE_VERSION }} ${{ env.ASSET }}
