// carbon design stylesheets

@use '@carbon/themes/scss/themes' as *;
@use '@carbon/themes' with ($theme: $white);

@import './carbon-style-compiled.css';

:root {
  // Emit CSS Custom Properties for the current theme
  @include themes.theme();
}

.text-overflow {
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#lobby {
  display: flex;
  flex-direction: column;
  height: calc(100vh - 3rem);
  overflow: auto;

  > :nth-child(2) {
    flex-grow: 1;
    flex-shrink: 1;
  }

  // make scrollbars fit nicely with page viewport size
  // carbon's stickyheader property on datatables is shit
  // this is quite complicated, idk of better ways
  .bx--row>* {
    display: flex;
    flex-direction: column;

    .table-wrapper {
      min-height: 25rem;
      flex-grow: 1;
      position: relative;
      overflow: hidden;

      .bx--data-table-container {
        overflow-y: scroll;
        padding: 0;
        position: absolute;
        inset: 0;

        .bx--table-toolbar {
          position: sticky;
          top: 0;
        }

        thead {
          position: sticky;
          top: 3rem;
          z-index: 1;
        }
      }
    }
  }
}

.bx--modal-content {
  margin-bottom: 1rem !important;
}

#edit {

  input[type='number'],
  input[type='text'],
  input[type='button'],
  input[type='color'],
  select,
  textarea,
  button.danger,
  button.default,
  button.primary {
    border: none;
    padding: 0.25rem 0.4rem;
    text-overflow: ellipsis;
    overflow: hidden;
    background-color: #f2f2f2;
    height: 2rem;

    outline: 1px solid #aaaaaa;
    outline-offset: -1px;

    &:hover {
      outline: 1px solid #393939;
      outline-offset: -1px;
    }

    &:focus {
      outline: 2px solid #0f62fe;
      outline-offset: -2px;
    }

    &[disabled] {
      color: #aaaaaa;
      cursor: not-allowed;

      &:hover {
        outline-color: #aaaaaa;
      }
    }
  }

  button.large {
    padding: 0.5rem 0.8rem;
  }

  button.danger {
    color: white;
    background-color: #da1e28;
    outline-color: #da1e28;
  }

  button.primary:not(:disabled) {
    color: white;
    background-color: #0f62fe;
    outline-color: #0f62fe;

    &:hover {
      background-color: #0353e9;
      outline-color: #0353e9;
    }
  }
}

button {
  cursor: pointer;
}

$header-h: 3rem;

#panes {
  height: calc(100vh - $header-h);

  .splitpanes__splitter {
    border: 0;
    margin: 0;
    z-index: unset;
    background-color: white;
    transition: background-color 0.2s ease;

    &:before,
    &:after {
      display: none;
    }

    &:hover {
      background-color: #4589ff;
    }
  }

  .splitpanes--vertical>.splitpanes__splitter,
  &.splitpanes--vertical>.splitpanes__splitter {
    width: 4px;
  }

  .splitpanes--horizontal>.splitpanes__splitter,
  &.splitpanes--horizontal>.splitpanes__splitter {
    height: 4px;
  }

  .splitpanes__pane {
    background-color: transparent;
  }

  .splitpanes__pane.layers,
  .splitpanes__pane.properties,
  .splitpanes__pane.automappers,
  .splitpanes__pane.code,
  .splitpanes__pane.envelopes {
    background-color: #f2f2f2;
  }

  .splitpanes__pane.viewport {
    position: relative;
  }

  .splitpanes__pane.layers,
  .splitpanes__pane.properties {
    overflow: auto;
  }
}

.map-view {
  width: 100%;
  height: 100%;

  // make the canvas darker when unfocused to show that other inputs have focus.
  transition:
    background-color 0.2s,
    box-shadow 0.2s;

  &:not(:focus) {
    background-color: rgba(0, 0, 0, 0.1);
    box-shadow: inset 0 0 20px -10px black;
  }

  >canvas {
    height: 100%;
    width: 100%;
  }
}

.map-view>canvas,
.tiles>canvas {
  background-image: url('/editor/checker.png');
  background-repeat: repeat;
}

#header {
  width: 100%;
  height: $header-h;
  justify-content: space-between;
  display: flex;
  flex-direction: row;
  background: #161616;
  color: white;

  >.left,
  >.right,
  >.middle {
    display: flex;
    align-items: center;
    flex-direction: row;
    flex-basis: 0;
    flex-grow: 1;
  }

  .left {
    margin-right: 1rem;
  }

  .middle {
    justify-content: center;
    flex-shrink: 1;
    overflow: hidden;
    text-align: center;
  }

  .right {
    justify-content: flex-end;
    margin-right: 1rem;
  }

  .bx--overflow-menu ul::after {
    width: $header-h;
  }

  .separator {
    height: 100%;
    width: 1px;
    padding: 10px 0;
    margin: 0 1rem;

    &::after {
      content: '';
      display: block;
      background: #aaa;
      width: 100%;
      height: 100%;
    }
  }

  #users {
    width: $header-h;
    height: $header-h;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
  }

  .header-btn {
    width: $header-h;
    height: $header-h;
    display: flex;
    justify-content: center;
    align-items: center;
    background: transparent;
    border: none;
    outline: none;
    margin: 0;
    padding: 0;

    >svg {
      fill: white;
    }

    &[disabled]>svg {
      fill: grey;
    }

    &:hover,
    &:focus {
      background: #393939;
    }

    &:focus {
      outline: 2px solid #0f62fe;
      outline-offset: -2px;
    }

    &.selected {
      background: #393939;
      // outline: 2px solid #f4f4f4;
      // outline-offset: -2px;
    }
  }
}

#dialog {
  position: fixed;
  top: 3rem;
  right: 0;
  z-index: 10000;
}

#tree {
  display: flex;
  flex-direction: column;

  .node {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    height: 2rem;
    padding-left: 1rem;
    cursor: default;

    color: themes.$text-secondary;
    background-color: themes.$layer-01;
    user-select: none;

    &:hover {
      color: themes.$text-primary;
      background-color: themes.$layer-hover-01;
    }

    &.selected,
    &.active {
      color: themes.$text-primary;
      background-color: themes.$layer-selected-01;
    }

    &:focus {
      outline: 2px solid themes.$focus;
      outline-offset: -2px;
    }

    // &.selected::before,
    &.active::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0.25rem;
      background: themes.$focus;
    }

    >.label {
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      flex-grow: 1;
      padding-right: 0.5rem;
      height: 100%;
      display: flex;
      align-items: center;
    }
  }

  .layer .node {
    padding-left: 3.5rem;
  }

  .group {
    display: flex;
    flex-direction: column;

    &.folded>ul {
      display: none;
    }

    &.folded>.node>.toggle>svg {
      transform: rotate(-90deg);
    }
  }

  .toggle,
  .icon,
  .eye {
    margin-right: 0.5rem;
  }

  .toggle,
  .eye {
    cursor: pointer;
  }

  li.visible:not(:hover)>.node>.eye {
    display: none;
  }

  .toggle>svg {
    transition: transform 0.2s;
  }

  .group:not(.visible) .layer {
    opacity: 0.5;
  }
}

#create-group {
  width: 100%;
  max-width: unset;
}

#statusbar {
  position: fixed;
  left: 15rem;
  right: 0;
  bottom: 0;

  #tooltip {
    float: right;
    padding: 0.2rem 1rem;
    height: 100%;
    background-color: white;
  }
}

#tile-picker {

  >.picker {
    position: absolute;
    inset: 0;
    padding-top: 6rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 6rem;
    display: flex;
    justify-content: center;

    >.content {
      aspect-ratio: 1/1;
      display: flex;
      align-items: flex-end;

      >.tiles {
        position: relative;
        flex-grow: 1;
        z-index: 1;
        outline: 3px solid black;
      }
    }

    &.hidden {
      display: none;
    }
  }

  canvas {
    width: 100%;
    height: 100%;
    object-fit: cover;
    image-rendering: -moz-crisp-edges;
    image-rendering: -webkit-crisp-edges;
    image-rendering: pixelated;
    image-rendering: crisp-edges;
  }

  .box-select {
    position: absolute;
    background: blue;
    opacity: 0.5;
    pointer-events: none;
  }

  .header {
    position: absolute;
    top: -2rem;
    padding: 0.5rem;
    height: 2rem;
    width: 100%;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    outline: 3px solid black;
    background: white;

    label {
      display: flex;
      gap: 0.5rem;
      align-items: center;
    }

    input[type='number'] {
      width: 4rem;
    }

    .tiles {
      position: relative;
    }
  }

  .settings {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    .buttons {
      text-align: center;

      button {
        width: 2rem;
        height: 2rem;

        >img {
          width: 100%;
          height: 100%;
        }
      }
    }
  }
}

#map-editor .controls {
  background: white;
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 6px 0px;
}

.context {
  pointer-events: auto;
  position: fixed;
  inset: 0;
  z-index: 10;

  .content {
    position: absolute;
    padding: 0.5rem 0;
    background: white;
    border: 1px solid #aaa;
    box-shadow: 0px 5px 15px 0px #00000055;
    border-radius: 10px;
  }
}

#edit-brush {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  background-color: themes.$layer-01;

  .buttons {
    display: flex;
    padding: 0.5rem;
    gap: 1rem;

    button {
      width: 2rem;
      height: 2rem;

      >svg {
        width: 100%;
        height: 100%;
      }
    }
  }
}

.edit-layer,
.edit-group,
.edit-quad,
.edit-info,
.edit-sharing,
.edit-env-point,
.edit-automapper,
.edit-multiple,
.new-automapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0.5rem 1rem;

  label {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    gap: 1rem;

    span {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
  }

  input[type='number'] {
    width: 4rem;
  }

  input {
    min-width: 4rem;
    max-width: 8rem;
  }
}

.edit-sharing {
  input {
    max-width: 20rem;
  }
}

nav.hidden .context {
  display: none;
}

#brush-events {
  inset: 0;
}

#map-editor {
  width: 100%;
  height: 100%;

  >.map-view>canvas {
    position: fixed;
    inset: 0;
    z-index: -1;
  }

  #brush-outline,
  #layer-outline,
  #clip-outline,
  #cursors {
    position: fixed;
    inset: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
  }

  #brush-outline {
    border: 4px solid black;
    opacity: 0.3;
  }

  #layer-outline {
    border: 2px solid white;
    outline: 2px solid black;
    box-shadow: 0 0 10px 1px;
  }

  #clip-outline {
    border: 1px solid white;
    outline: 1px solid red;
    box-shadow: 0 0 5px 1px;
  }
}

#image-picker {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 1rem;

  $img-size: 10rem;

  >.footer {
    // background: white;
    // border: 1px solid black;
    // border-top: none;
    width: 100%;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  >.images {
    overflow: auto;

    .list {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 1rem;

      .image {
        width: $img-size;
        height: $img-size;
        border: 1px solid grey;
        border-radius: 3px;
        position: relative;
        overflow: hidden;
        padding: 0;

        &:hover>button {
          position: absolute;
          top: 0;
          right: 0;
          padding: 0.25rem;
          line-height: 1rem;
          width: 2rem;
          height: 2rem;
          text-align: center;
          font-weight: bold;
          background: white;
          border: none;
          font-size: 1.5rem;

          &:hover {
            color: darkred;
            font-size: 1.5rem;
            font-size: 2rem;
          }
        }

        &.selected {
          border: 4px solid #0f62fe;
        }

        .hover {
          position: absolute;
          width: 100%;
          bottom: -2.1rem;
          overflow: hidden;
          text-overflow: ellipsis;
          padding: 0.3rem;
          background: white;
          transition: all 0.2s;
          text-align: center;
          border-top: 1px solid grey;
          font-weight: bold;
          white-space: nowrap;
        }

        &:hover .hover {
          bottom: 0;
        }

        img {
          width: 100%;
          height: 100%;
          object-fit: contain;
          filter: drop-shadow(1px 0px 0px rgba(0, 0, 0, 0.4)) drop-shadow(0px 1px 0px rgba(0, 0, 0, 0.4)) drop-shadow(-1px 0px 0px rgba(0, 0, 0, 0.4)) drop-shadow(0px -1px 0px rgba(0, 0, 0, 0.4));
        }
      }
    }
  }
}

#quads-view {
  position: absolute;
  inset: 0;

  >svg {
    position: absolute;

    >* {
      pointer-events: auto;
      vector-effect: non-scaling-stroke;
    }

    polygon {
      fill: transparent;

      &:hover {
        stroke-width: 5px;
        fill: rgba(255, 255, 255, 0.2);
      }
    }

    line {
      stroke: black;
      stroke-width: 2px;

      &:hover {
        stroke-width: 5px;
        fill: rgba(255, 255, 255, 0.2);
      }
    }

    circle {
      stroke: black;

      &.center {
        fill: green;
        stroke: green;
      }

      &:hover {
        stroke-width: 5px;
      }
    }
  }
}

#envelope-editor {
  display: flex;
  flex-direction: column;
  height: 100%;

  &.hidden {
    transform: translateY(100%);
  }

  .header {
    padding: 0.5rem 1rem;
    border-bottom: 1px solid lightgrey;
    display: flex;
    flex-direction: row;
    gap: 1rem;

    >.channels {
      flex-grow: 1;
    }

    .buttons {
      display: flex;
      gap: 1rem;
    }
  }

  .graph {
    flex-grow: 1;
    position: relative;
    background: white;
  }

  svg {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  path {
    vector-effect: non-scaling-stroke;
    stroke-width: 2px;
    stroke: black;
    fill: none;

    &:hover {
      stroke-width: 5px;
    }
  }

  .axis {
    vector-effect: non-scaling-stroke;
    pointer-events: none;
    stroke-width: 1px;
    stroke: black;
    stroke-dasharray: 2px;
  }

  path.point {
    stroke-width: 5px;
    stroke-linecap: round;

    &:hover {
      stroke-width: 10px;
    }
  }

  .channels {
    display: flex;
    align-items: center;

    label {
      position: relative;
      display: block;
      width: 2rem;
      height: 2rem;
      user-select: none;

      &.red span {
        color: red;
      }

      &.green span {
        color: green;
      }

      &.blue span {
        color: blue;
      }

      &.orange span {
        color: orange;
      }

      &.red input:checked~span {
        background-color: red;
        color: white;
      }

      &.green input:checked~span {
        background-color: green;
        color: white;
      }

      &.blue input:checked~span {
        background-color: blue;
        color: white;
      }

      &.orange input:checked~span {
        background-color: orange;
        color: white;
      }

      input {
        position: absolute;
        opacity: 0;
        inset: 0;
      }

      span {
        position: absolute;
        inset: 0;
        text-align: center;
        padding: 0.6rem;
      }
    }
  }
}

.cursor {
  position: absolute;
  pointer-events: none;
  width: 32px;
  height: 32px;
}

#stats {
  position: fixed;
  bottom: 0;
  right: 0;
  padding: 0.5rem;
  background: black;
  color: yellow;
  font-weight: bold;
  z-index: 1;
}

#edit-automapper {

  .left,
  .middle,
  .right {
    height: 100%;
  }

  .left {
    .list {
      display: flex;
      flex-direction: column;

      >input[type='text'] {
        margin-top: 0.5rem;
      }
    }

    .row {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 0.5rem;
      height: 2rem;
      width: 100%;
      padding-left: 1rem;
      cursor: default;

      color: themes.$text-secondary;
      background-color: themes.$layer-01;
      user-select: none;

      &:hover {
        color: themes.$text-primary;
        background-color: themes.$layer-hover-01;
      }

      &.selected {
        color: themes.$text-primary;
        background-color: themes.$layer-selected-01;
      }

      &:focus {
        outline: 2px solid themes.$focus;
        outline-offset: -2px;
      }

      &.selected::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 0.25rem;
        background: themes.$focus;
      }

      >.label {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        flex-grow: 1;
        height: 100%;
        display: flex;
        align-items: center;
      }

      >.icon>svg {
        width: 1rem;
        height: 1rem;
      }

      >button {
        color: inherit;
        background: none;
        width: 2rem;
        height: 2rem;
        padding: 0.5rem;
        text-align: center;
        background: none;
        border: none;
        cursor: pointer;
      }

      &:not(:hover)>button {
        display: none;
      }

      >button:hover svg {
        color: #da1e28;
      }
    }
  }

  .middle {
    display: flex;
    flex-direction: column;

    .editor {
      flex-grow: 1;
      overflow: auto;
    }

    .controls {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 1rem;
      border-bottom: 1px solid #ddd;

      .modified {
        font-style: italic;
      }
    }
  }

  .right {
    .editor {
      flex-grow: 1;
      padding: 0.2rem;
      overflow: auto;
      height: calc(100vh - 15rem); // COMBAK: this is a bit gross
    }
  }
}

textarea.diagnostics {
  width: 100%;
  height: 80vh;
}

.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 1rem;
  overflow: hidden;

  &.fullscreen {
    width: 100vw;
    height: 100vh;

    >.content>.text {
      margin-top: 10rem;
    }
  }

  >.content>.text {
    z-index: 7000;
    margin: 1rem;
  }
}